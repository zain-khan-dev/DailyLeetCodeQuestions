class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        idx = len(nums) - 2
        min_element = nums[-1]
        while(idx >= 0):
            if(nums[idx] < nums[idx + 1]):
                break
            idx -= 1
        if(idx == -1):
            nums.sort()
            return
        
        cidx = idx + 1
        swap_index = -1
        min_element = -1
        while(cidx < len(nums)):
            if(nums[cidx] > nums[idx]):
                if(min_element == -1):
                    min_element = nums[cidx]
                    swap_index = cidx
                if(min_element > nums[cidx]):
                    min_element = nums[cidx]
                    swap_index = cidx
            cidx += 1
        temp = nums[idx]
        nums[idx] = nums[swap_index]
        nums[swap_index] = temp
        nums[idx+1:] = sorted(nums[idx+1:])
        
            
            
