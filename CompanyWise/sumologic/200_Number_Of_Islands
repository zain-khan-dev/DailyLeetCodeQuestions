class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        dq = deque()
        idx = 0
        jdx = 0
        count = 0
        visited = [[False]*(len(grid[0])) for _ in range(len(grid))]
        for idx in range(len(grid)):
           for jdx in range(len(grid[idx])):
                if(grid[idx][jdx] == '1' and visited[idx][jdx] == False):
                    count += 1
                    visited[idx][jdx] = True
                    dq.append((idx, jdx))
                    while(dq):
                        x, y = dq.pop()
                        if(x+1<len(grid) and visited[x+1][y] == False and grid[x+1][y] == '1'):
                            visited[x+1][y] = True
                            dq.append((x+1, y))
                        if(y+1<len(grid[x]) and visited[x][y+1] == False and grid[x][y+1] == '1'):
                            visited[x][y+1] = True
                            dq.append((x, y+1))
                        if(x-1>=0 and visited[x-1][y] == False and grid[x-1][y] == '1'):
                            visited[x-1][y] = True
                            dq.append((x-1, y))
                        if(y-1>=0 and visited[x][y-1] == False and grid[x][y-1] == '1'):
                            visited[x][y-1] = True
                            dq.append((x, y-1))
        return count
